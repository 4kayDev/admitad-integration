// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.4
// source: proto/admitad_integration/admitad_integration.proto

package admitadintegration

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AdmitadIntegrationClient is the client API for AdmitadIntegration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdmitadIntegrationClient interface {
	GetOffers(ctx context.Context, in *GetOffersRequest, opts ...grpc.CallOption) (*GetOffersResponse, error)
	ToogleSaveOffer(ctx context.Context, in *ToogleSaveOfferRequest, opts ...grpc.CallOption) (*ToogleSaveOfferResponse, error)
	GetSavedOffers(ctx context.Context, in *GetSavedOffersRequest, opts ...grpc.CallOption) (*GetSavedOffersResponse, error)
	UpdateSavedOffer(ctx context.Context, in *UpdateSavedOfferRequest, opts ...grpc.CallOption) (*UpdateSavedOfferResponse, error)
	InitLink(ctx context.Context, in *InitLinkRequest, opts ...grpc.CallOption) (*InitLinkResponse, error)
}

type admitadIntegrationClient struct {
	cc grpc.ClientConnInterface
}

func NewAdmitadIntegrationClient(cc grpc.ClientConnInterface) AdmitadIntegrationClient {
	return &admitadIntegrationClient{cc}
}

func (c *admitadIntegrationClient) GetOffers(ctx context.Context, in *GetOffersRequest, opts ...grpc.CallOption) (*GetOffersResponse, error) {
	out := new(GetOffersResponse)
	err := c.cc.Invoke(ctx, "/admitadintegration.AdmitadIntegration/GetOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *admitadIntegrationClient) ToogleSaveOffer(ctx context.Context, in *ToogleSaveOfferRequest, opts ...grpc.CallOption) (*ToogleSaveOfferResponse, error) {
	out := new(ToogleSaveOfferResponse)
	err := c.cc.Invoke(ctx, "/admitadintegration.AdmitadIntegration/ToogleSaveOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *admitadIntegrationClient) GetSavedOffers(ctx context.Context, in *GetSavedOffersRequest, opts ...grpc.CallOption) (*GetSavedOffersResponse, error) {
	out := new(GetSavedOffersResponse)
	err := c.cc.Invoke(ctx, "/admitadintegration.AdmitadIntegration/GetSavedOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *admitadIntegrationClient) UpdateSavedOffer(ctx context.Context, in *UpdateSavedOfferRequest, opts ...grpc.CallOption) (*UpdateSavedOfferResponse, error) {
	out := new(UpdateSavedOfferResponse)
	err := c.cc.Invoke(ctx, "/admitadintegration.AdmitadIntegration/UpdateSavedOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *admitadIntegrationClient) InitLink(ctx context.Context, in *InitLinkRequest, opts ...grpc.CallOption) (*InitLinkResponse, error) {
	out := new(InitLinkResponse)
	err := c.cc.Invoke(ctx, "/admitadintegration.AdmitadIntegration/InitLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdmitadIntegrationServer is the server API for AdmitadIntegration service.
// All implementations must embed UnimplementedAdmitadIntegrationServer
// for forward compatibility
type AdmitadIntegrationServer interface {
	GetOffers(context.Context, *GetOffersRequest) (*GetOffersResponse, error)
	ToogleSaveOffer(context.Context, *ToogleSaveOfferRequest) (*ToogleSaveOfferResponse, error)
	GetSavedOffers(context.Context, *GetSavedOffersRequest) (*GetSavedOffersResponse, error)
	UpdateSavedOffer(context.Context, *UpdateSavedOfferRequest) (*UpdateSavedOfferResponse, error)
	InitLink(context.Context, *InitLinkRequest) (*InitLinkResponse, error)
	mustEmbedUnimplementedAdmitadIntegrationServer()
}

// UnimplementedAdmitadIntegrationServer must be embedded to have forward compatible implementations.
type UnimplementedAdmitadIntegrationServer struct {
}

func (UnimplementedAdmitadIntegrationServer) GetOffers(context.Context, *GetOffersRequest) (*GetOffersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOffers not implemented")
}
func (UnimplementedAdmitadIntegrationServer) ToogleSaveOffer(context.Context, *ToogleSaveOfferRequest) (*ToogleSaveOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToogleSaveOffer not implemented")
}
func (UnimplementedAdmitadIntegrationServer) GetSavedOffers(context.Context, *GetSavedOffersRequest) (*GetSavedOffersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSavedOffers not implemented")
}
func (UnimplementedAdmitadIntegrationServer) UpdateSavedOffer(context.Context, *UpdateSavedOfferRequest) (*UpdateSavedOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSavedOffer not implemented")
}
func (UnimplementedAdmitadIntegrationServer) InitLink(context.Context, *InitLinkRequest) (*InitLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitLink not implemented")
}
func (UnimplementedAdmitadIntegrationServer) mustEmbedUnimplementedAdmitadIntegrationServer() {}

// UnsafeAdmitadIntegrationServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdmitadIntegrationServer will
// result in compilation errors.
type UnsafeAdmitadIntegrationServer interface {
	mustEmbedUnimplementedAdmitadIntegrationServer()
}

func RegisterAdmitadIntegrationServer(s grpc.ServiceRegistrar, srv AdmitadIntegrationServer) {
	s.RegisterService(&AdmitadIntegration_ServiceDesc, srv)
}

func _AdmitadIntegration_GetOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOffersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdmitadIntegrationServer).GetOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admitadintegration.AdmitadIntegration/GetOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdmitadIntegrationServer).GetOffers(ctx, req.(*GetOffersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdmitadIntegration_ToogleSaveOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToogleSaveOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdmitadIntegrationServer).ToogleSaveOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admitadintegration.AdmitadIntegration/ToogleSaveOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdmitadIntegrationServer).ToogleSaveOffer(ctx, req.(*ToogleSaveOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdmitadIntegration_GetSavedOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSavedOffersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdmitadIntegrationServer).GetSavedOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admitadintegration.AdmitadIntegration/GetSavedOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdmitadIntegrationServer).GetSavedOffers(ctx, req.(*GetSavedOffersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdmitadIntegration_UpdateSavedOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSavedOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdmitadIntegrationServer).UpdateSavedOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admitadintegration.AdmitadIntegration/UpdateSavedOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdmitadIntegrationServer).UpdateSavedOffer(ctx, req.(*UpdateSavedOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdmitadIntegration_InitLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdmitadIntegrationServer).InitLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admitadintegration.AdmitadIntegration/InitLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdmitadIntegrationServer).InitLink(ctx, req.(*InitLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AdmitadIntegration_ServiceDesc is the grpc.ServiceDesc for AdmitadIntegration service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdmitadIntegration_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "admitadintegration.AdmitadIntegration",
	HandlerType: (*AdmitadIntegrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOffers",
			Handler:    _AdmitadIntegration_GetOffers_Handler,
		},
		{
			MethodName: "ToogleSaveOffer",
			Handler:    _AdmitadIntegration_ToogleSaveOffer_Handler,
		},
		{
			MethodName: "GetSavedOffers",
			Handler:    _AdmitadIntegration_GetSavedOffers_Handler,
		},
		{
			MethodName: "UpdateSavedOffer",
			Handler:    _AdmitadIntegration_UpdateSavedOffer_Handler,
		},
		{
			MethodName: "InitLink",
			Handler:    _AdmitadIntegration_InitLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/admitad_integration/admitad_integration.proto",
}
